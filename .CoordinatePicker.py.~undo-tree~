(undo-tree-save-format-version . 1)
"d5863b21dec439f218629df4b948a1c285c36f2c"
[nil nil nil nil (26177 11507 328079 592000) 0 nil]
([nil nil ((1822 . 1827) (t 26170 56551 378122 350000)) nil (26177 11507 328079 61000) 0 nil])
([nil nil ((1827 . 1834)) nil (26177 11507 328078 610000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -1833) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) 1834) nil (26177 11507 328077 647000) 0 nil])
([nil nil ((1833 . 1834)) nil (26177 11507 328058 182000) 0 nil])
([nil nil ((1832 . 1836) (#("Pl" 0 2 (fontified nil)) . -1832) (1832 . 1834) (#("Plot" 0 4 (fontified nil)) . -1832) (1832 . 1836) (#("Pl" 0 2 (fontified t)) . -1832) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) 1834) nil (26177 11507 328055 956000) 0 nil])
([nil nil ((1836 . 1838)) nil (26177 11507 327611 781000) 0 nil])
([nil nil ((1766 . 1775) (t 26177 11507 438787 703000)) nil (26177 11551 506974 167000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1771) (undo-tree-id153 . -4) 1775) nil (26177 11551 506973 647000) 0 nil])
([nil nil ((1768 . 1772) (#("    " 0 4 (fontified nil)) . 1767) (undo-tree-id152 . -4) (1771 . 1772)) nil (26177 11551 506972 768000) 0 nil])
([nil nil ((1772 . 1780)) nil (26177 11551 506971 909000) 0 nil])
([nil nil ((#("s" 0 1 (face py-def-face fontified t)) . -1776) (undo-tree-id148 . -1) (#("h" 0 1 (face py-def-face fontified t)) . -1777) (undo-tree-id149 . -1) (#("o" 0 1 (face py-def-face fontified t)) . -1778) (undo-tree-id150 . -1) (#("w" 0 1 (face py-def-face fontified t)) . -1779) (undo-tree-id151 . -1) 1780) nil (26177 11551 506970 930000) 0 nil])
([nil nil ((1776 . 1786)) nil (26177 11551 506962 580000) 0 nil])
([nil nil ((1786 . 1787)) nil (26177 11551 506962 300000) 0 nil])
([nil nil ((1787 . 1796)) nil (26177 11551 506961 911000) 0 nil])
([nil nil ((1796 . 1806)) nil (26177 11551 506958 85000) 0 nil])
([nil nil ((1878 . 1883) (t 26177 11551 618362 818000)) nil (26177 11561 701717 745000) 0 nil])
([nil nil ((1883 . 1888)) nil (26177 11561 701717 245000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1883) (undo-tree-id155 . -1) (#("e" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1884) (undo-tree-id156 . -1) (#("s" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1885) (undo-tree-id157 . -1) (#("t" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1886) (undo-tree-id158 . -1) (#("." 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1887) (undo-tree-id159 . -1) 1888) nil (26177 11561 701716 375000) 0 nil])
([nil nil ((1883 . 1890)) nil (26177 11561 701712 904000) 0 nil])
([nil nil ((1887 . 1891) (#("sh" 0 2 (fontified nil)) . -1887) (1887 . 1889) (#("show" 0 4 (fontified nil)) . -1887) (1887 . 1891) (#("sho" 0 3 (fontified t match-data (0 2 0 1 1 2))) . -1887) (undo-tree-id154 . -3) 1890) nil (26177 11561 701711 973000) 0 nil])
([nil nil ((1891 . 1893)) nil (26177 11561 701701 390000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1883) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("l" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1884) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#("t" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1885) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) 1886 (t 26177 11561 815968 671000)) nil (26177 11614 274878 760000) 0 nil])
([nil nil ((1883 . 1891)) nil (26177 11614 274864 584000) 0 nil])
([nil nil ((#("    test.fig.show()" 0 12 (fontified t match-data (0 2 0 1 1 2)) 12 13 (fontified t match-data (0 2 0 1 1 2)) 13 17 (fontified t match-data (0 3 0 1 1 2 2 3)) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 3 0 1 1 2 2 3)) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 3 0 1 1 2 2 3))) . 1879) (undo-tree-id304 . -14) (undo-tree-id305 . -4) (undo-tree-id306 . 7) (undo-tree-id307 . -12) (undo-tree-id308 . -12) (undo-tree-id309 . -12) (undo-tree-id310 . -12) (undo-tree-id311 . -12) (undo-tree-id312 . -12) (undo-tree-id313 . -12) (undo-tree-id314 . -12) (undo-tree-id315 . -12) (undo-tree-id316 . -12) (undo-tree-id317 . -12) (undo-tree-id318 . -12) (undo-tree-id319 . -12) (undo-tree-id320 . -12) (undo-tree-id321 . -12) (undo-tree-id322 . -12) (undo-tree-id323 . -12) (undo-tree-id324 . -12) (undo-tree-id325 . -12) (undo-tree-id326 . -12) (undo-tree-id327 . -12) (undo-tree-id328 . -12) (undo-tree-id329 . -12) (undo-tree-id330 . -12) (undo-tree-id331 . -12) (undo-tree-id332 . -12) (undo-tree-id333 . -12) (undo-tree-id334 . -12) (undo-tree-id335 . -12) (undo-tree-id336 . -12) (undo-tree-id337 . -12) (undo-tree-id338 . -12) (undo-tree-id339 . -12) (undo-tree-id340 . -12) (undo-tree-id341 . -12) (undo-tree-id342 . -12) (undo-tree-id343 . -12) (undo-tree-id344 . -12) (undo-tree-id345 . -12) (undo-tree-id346 . -12) (undo-tree-id347 . -12) (undo-tree-id348 . -12) (undo-tree-id349 . -12) (undo-tree-id350 . -12) (undo-tree-id351 . -12) (undo-tree-id352 . -12) (undo-tree-id353 . -12) (undo-tree-id354 . -12) (undo-tree-id355 . -12) (undo-tree-id356 . -12) (undo-tree-id357 . -12) (undo-tree-id358 . -12) (undo-tree-id359 . -12) (undo-tree-id360 . -12) (undo-tree-id361 . -12) (undo-tree-id362 . -12) (undo-tree-id363 . -12) (undo-tree-id364 . -12) (undo-tree-id365 . -12) (undo-tree-id366 . -12) (undo-tree-id367 . -12) (undo-tree-id368 . -12) (undo-tree-id369 . -12) (undo-tree-id370 . -12) (undo-tree-id371 . -12) (undo-tree-id372 . -12) (undo-tree-id373 . -12) (undo-tree-id374 . -12) (undo-tree-id375 . -12) (undo-tree-id376 . -12) (undo-tree-id377 . -12) (undo-tree-id378 . -12) (undo-tree-id379 . -12) (undo-tree-id380 . -12) (undo-tree-id381 . -12) (undo-tree-id382 . -12) (undo-tree-id383 . -12) (undo-tree-id384 . -12) (undo-tree-id385 . -12) (undo-tree-id386 . -12) (undo-tree-id387 . -19) (t 26177 11614 389879 338000)) nil (26177 11622 587317 796000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1879) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . 1) (undo-tree-id303 . -1)) nil (26177 11622 587026 522000) 0 nil])
([nil nil ((#("    test.Plot()" 0 9 (fontified t) 9 13 (fontified t match-data (0 2 0 1 1 2)) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 14 15 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2))) . 1863) (undo-tree-id298 . -15) (undo-tree-id299 . -15)) nil (26177 11622 587024 200000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t match-data (0 2 0 1 1 2))) . 1863) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1)) nil (26177 11622 587015 560000) 0 nil])
([nil nil ((818 . 831) (t 26177 11622 699440 559000)) nil (26177 11669 967356 901000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 827) (undo-tree-id510 . -4) 831) nil (26177 11669 967356 190000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 823) (undo-tree-id509 . -4) 827) nil (26177 11669 967355 399000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -819) (undo-tree-id508 . -4) 823) nil (26177 11669 967354 709000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -818) (undo-tree-id507 . -1) 819) nil (26177 11669 967353 607000) 0 nil])
([nil nil ((772 . 785)) nil (26177 11669 967352 977000) 0 nil])
([nil nil ((785 . 801)) nil (26177 11669 967352 696000) 0 nil])
([nil nil ((796 . 804) (#("se" 0 2 (fontified nil)) . -796) (796 . 798) (#("selector" 0 8 (fontified nil)) . -796) (796 . 804) (#("selec" 0 5 (fontified t)) . -796) (undo-tree-id480 . -5) (undo-tree-id481 . -5) (undo-tree-id482 . -5) (undo-tree-id483 . -5) (undo-tree-id484 . -5) (undo-tree-id485 . -5) (undo-tree-id486 . -5) (undo-tree-id487 . -5) (undo-tree-id488 . -5) (undo-tree-id489 . -5) (undo-tree-id490 . -5) (undo-tree-id491 . -5) (undo-tree-id492 . -5) (undo-tree-id493 . -5) (undo-tree-id494 . -5) (undo-tree-id495 . -5) (undo-tree-id496 . -5) (undo-tree-id497 . -5) (undo-tree-id498 . -5) (undo-tree-id499 . -5) (undo-tree-id500 . -5) (undo-tree-id501 . -5) (undo-tree-id502 . -5) (undo-tree-id503 . -5) (undo-tree-id504 . -5) (undo-tree-id505 . -5) (undo-tree-id506 . -5) 801) nil (26177 11669 967351 765000) 0 nil])
([nil nil ((804 . 810)) nil (26177 11669 967341 213000) 0 nil])
([nil nil ((805 . 812) (#("ex" 0 2 (fontified nil)) . -805) (805 . 807) (#("extents" 0 7 (fontified nil)) . -805) (805 . 812) (#("exten" 0 5 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -805) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -2) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (undo-tree-id421 . -2) (undo-tree-id422 . -2) (undo-tree-id423 . -2) (undo-tree-id424 . -2) (undo-tree-id425 . -2) (undo-tree-id426 . -2) (undo-tree-id427 . -2) (undo-tree-id428 . -2) (undo-tree-id429 . -2) (undo-tree-id430 . -2) (undo-tree-id431 . -2) (undo-tree-id432 . -2) (undo-tree-id433 . -2) (undo-tree-id434 . -2) (undo-tree-id435 . -2) (undo-tree-id436 . -2) (undo-tree-id437 . -2) (undo-tree-id438 . -3) (undo-tree-id439 . -3) (undo-tree-id440 . -3) (undo-tree-id441 . -3) (undo-tree-id442 . -3) (undo-tree-id443 . -3) (undo-tree-id444 . -3) (undo-tree-id445 . -3) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (undo-tree-id448 . -4) (undo-tree-id449 . -4) (undo-tree-id450 . -4) (undo-tree-id451 . -4) (undo-tree-id452 . -4) (undo-tree-id453 . -4) (undo-tree-id454 . -5) (undo-tree-id455 . -5) (undo-tree-id456 . -5) (undo-tree-id457 . -5) (undo-tree-id458 . -5) (undo-tree-id459 . -5) (undo-tree-id460 . -5) (undo-tree-id461 . -5) (undo-tree-id462 . -5) (undo-tree-id463 . -5) (undo-tree-id464 . -5) (undo-tree-id465 . -5) (undo-tree-id466 . -5) (undo-tree-id467 . -5) (undo-tree-id468 . -5) (undo-tree-id469 . -5) (undo-tree-id470 . -5) (undo-tree-id471 . -5) (undo-tree-id472 . -5) (undo-tree-id473 . -5) (undo-tree-id474 . -5) (undo-tree-id475 . -5) (undo-tree-id476 . -5) (undo-tree-id477 . -5) (undo-tree-id478 . -5) (undo-tree-id479 . -5) 810) nil (26177 11669 967338 840000) 0 nil])
([nil nil ((812 . 813)) nil (26177 11669 966717 119000) 0 nil])
([nil nil ((575 . 582) (t 26177 11670 78673 336000)) nil (26177 13995 148322 443000) 0 nil])
([nil nil ((18 . 52) (577 . 577) (577 . 587) (#("tra" 0 3 (fontified nil)) . 577) (577 . 580) (#("transforms" 0 10 (fontified nil)) . -577) (577 . 587) (#("trans" 0 5 (fontified t)) . -577) (undo-tree-id550 . -5) (undo-tree-id551 . -5) 582) nil (26177 13995 148321 752000) 0 nil])
([nil nil ((621 . 622)) nil (26177 13995 148320 549000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -615) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (#("f" 0 1 (fontified t)) . -616) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (#("o" 0 1 (fontified t)) . -617) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (#("r" 0 1 (fontified t)) . -618) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (#("m" 0 1 (fontified t)) . -619) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (#("s" 0 1 (fontified t)) . -620) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (#("=" 0 1 (fontified t)) . -621) (undo-tree-id548 . -1) (undo-tree-id549 . -1) 622) nil (26177 13995 148319 97000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -611) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (#("r" 0 1 (fontified t)) . -612) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (#("a" 0 1 (fontified t)) . -613) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (#("n" 0 1 (fontified t)) . -614) (undo-tree-id534 . -1) (undo-tree-id535 . -1) 615) nil (26177 13995 148314 87000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 610) (undo-tree-id526 . -1) (undo-tree-id527 . -1) 611) nil (26177 13995 148311 142000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -609) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) 610) nil (26177 13995 148310 39000) 0 nil])
([nil nil ((609 . 615)) nil (26177 13995 148308 887000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -611) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (#("r" 0 1 (fontified t)) . -612) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (#("s" 0 1 (fontified t)) . -613) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (#("=" 0 1 (fontified t)) . -614) (undo-tree-id521 . -1) (undo-tree-id522 . -1) 615) nil (26177 13995 148308 296000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 610) (undo-tree-id513 . -1) (undo-tree-id514 . -1) 611) nil (26177 13995 148304 68000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -609) (undo-tree-id511 . -1) (undo-tree-id512 . -1) 610) nil (26177 13995 148299 529000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -826) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (#("l" 0 1 (fontified t)) . -827) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (#("f" 0 1 (face py-object-reference-face fontified t)) . -828) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (#("." 0 1 (fontified t)) . -829) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (#("s" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -830) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (#("e" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -831) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (#("l" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -832) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (#("e" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -833) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (#("c" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -834) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (#("t" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -835) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (#("o" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -836) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (#("r" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -837) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (#("." 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -838) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (#("e" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -839) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (#("x" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -840) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (#("t" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -841) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (#("e" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -842) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (#("n" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -843) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (#("t" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -844) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (#("s" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -845) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -846) (undo-tree-id618 . -1) (undo-tree-id619 . -1) 847 (t 26177 13995 259956 344000)) nil (26177 14254 802892 739000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -819) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (#("r" 0 1 (fontified t)) . -820) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (#("i" 0 1 (fontified t)) . -821) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (#("n" 0 1 (fontified t)) . -822) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (#("t" 0 1 (face py-builtins-face fontified t)) . -823) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -824) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (#("s" 0 1 (fontified t)) . -825) (undo-tree-id576 . -1) (undo-tree-id577 . -1) 826) nil (26177 14254 802876 811000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 815) (undo-tree-id562 . -4) (undo-tree-id563 . -4) 819) nil (26177 14254 802869 334000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 811) (undo-tree-id560 . -4) (undo-tree-id561 . -4) 815) nil (26177 14254 802868 181000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -807) (undo-tree-id558 . -4) (undo-tree-id559 . -4) 811) nil (26177 14254 802866 928000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -806) (undo-tree-id556 . -1) (undo-tree-id557 . -1) 807) nil (26177 14254 802865 164000) 0 nil])
([nil nil ((apply -2 807 855 undo--wrap-and-run-primitive-undo 807 855 ((819 . 821) 852))) nil (26177 14254 802863 279000) 0 nil])
([nil nil ((854 . 867)) nil (26177 14254 802862 948000) 0 nil])
([nil nil ((867 . 873)) nil (26177 14254 802862 698000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -871) (undo-tree-id554 . -1) (#("p" 0 1 (fontified t)) . -872) (undo-tree-id555 . -1) 873) nil (26177 14254 802862 207000) 0 nil])
([nil nil ((871 . 876)) nil (26177 14254 802860 984000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -875) (undo-tree-id553 . -1) 876) nil (26177 14254 802860 513000) 0 nil])
([nil nil ((875 . 885)) nil (26177 14254 802859 219000) 0 nil])
([nil nil ((885 . 898)) nil (26177 14254 802858 598000) 0 nil])
([nil nil ((898 . 910)) nil (26177 14254 802858 97000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -909) (undo-tree-id552 . -1) 910) nil (26177 14254 802857 405000) 0 nil])
([nil nil ((909 . 916)) nil (26177 14254 802846 389000) 0 nil])
([nil nil ((945 . 954) (t 26177 14254 916751 44000)) nil (26177 14587 213514 881000) 0 nil])
([nil nil ((960 . 961)) nil (26177 14587 213514 600000) 0 nil])
([nil nil ((1000 . 1001)) nil (26177 14587 213514 379000) 0 nil])
([nil nil ((1000 . 1001)) nil (26177 14587 213514 148000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 1000)) nil (26177 14587 213513 888000) 0 nil])
([nil nil ((994 . 1003)) nil (26177 14587 213513 647000) 0 nil])
([nil nil ((1049 . 1050)) nil (26177 14587 213513 406000) 0 nil])
([nil nil ((1043 . 1044)) nil (26177 14587 213512 904000) 0 nil])
([nil nil ((1043 . 1048)) nil (26177 14587 213512 593000) 0 nil])
([nil nil ((1043 . 1051) (#("sel" 0 3 (fontified nil)) . -1043) (1043 . 1046) (#("selector" 0 8 (fontified nil)) . -1043) (1043 . 1051) (#("selec" 0 5 (fontified t)) . -1043) (undo-tree-id639 . -5) 1048) nil (26177 14587 213512 252000) 0 nil])
([nil nil ((1098 . 1099)) nil (26177 14587 213510 908000) 0 nil])
([nil nil ((1092 . 1093)) nil (26177 14587 213510 577000) 0 nil])
([nil nil ((1092 . 1100)) nil (26177 14587 213510 55000) 0 nil])
([nil nil ((#("            min_point=(x1, y1)
            max_point=(x2, y2)" 0 12 (fontified t) 12 21 (face py-variable-name-face fontified t) 21 22 (face font-lock-operator-face fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 31 (fontified t) 31 43 (fontified t) 43 52 (face py-variable-name-face fontified t) 52 53 (face font-lock-operator-face fontified t) 53 54 (face (rainbow-delimiters-depth-1-face) fontified t) 54 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-1-face) fontified t)) . 855) (undo-tree-id637 . -61) (undo-tree-id638 . -31)) nil (26177 14587 213509 232000) 0 nil])
([nil nil ((1051 . 1064)) nil (26177 14587 213507 787000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1124 . 1125) (nil fontified nil 1124 . 1125) (nil fontified nil 1118 . 1124) (nil fontified nil 1117 . 1118) (nil fontified nil 1116 . 1117) (nil fontified nil 1107 . 1116) (nil fontified nil 1095 . 1107) (nil fontified nil 1094 . 1095) (nil fontified nil 1093 . 1094) (nil fontified nil 1087 . 1093) (nil fontified nil 1086 . 1087) (nil fontified nil 1085 . 1086) (nil fontified nil 1076 . 1085) (nil fontified nil 1064 . 1076) (1064 . 1125)) nil (26177 14587 213506 884000) 0 nil])
([nil nil ((1052 . 1064) (#("                        " 0 12 (fontified t) 12 24 (fontified t)) . 1052) (undo-tree-id636 . -12) 1082) nil (26177 14587 213504 155000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 855)) nil (26177 14587 213502 600000) 0 nil])
([nil nil ((1112 . 1125)) nil (26177 14587 213501 868000) 0 nil])
([nil nil ((1125 . 1129)) nil (26177 14587 213501 426000) 0 nil])
([nil nil ((1129 . 1135)) nil (26177 14587 213500 554000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1129) (undo-tree-id630 . -1) (#("i" 0 1 (fontified t)) . -1130) (undo-tree-id631 . -1) (#("s" 0 1 (fontified t)) . -1131) (undo-tree-id632 . -1) (#("p" 0 1 (fontified t)) . -1132) (undo-tree-id633 . -1) (#("l" 0 1 (fontified t)) . -1133) (undo-tree-id634 . -1) (#("a" 0 1 (fontified t)) . -1134) (undo-tree-id635 . -1) 1135) nil (26177 14587 213499 651000) 0 nil])
([nil nil ((1129 . 1150)) nil (26177 14587 213495 878000) 0 nil])
([nil nil ((1150 . 1151)) nil (26177 14587 213495 627000) 0 nil])
([nil nil ((1151 . 1158)) nil (26177 14587 213495 356000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1156) (undo-tree-id628 . -1) (#("e" 0 1 (fontified t)) . -1157) (undo-tree-id629 . -1) 1158) nil (26177 14587 213494 965000) 0 nil])
([nil nil ((1156 . 1160)) nil (26177 14587 213493 520000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1157) (undo-tree-id625 . -1) (#("e" 0 1 (fontified t)) . -1158) (undo-tree-id626 . -1) (#("s" 0 1 (fontified t)) . -1159) (undo-tree-id627 . -1) 1160) nil (26177 14587 213493 159000) 0 nil])
([nil nil ((1157 . 1176)) nil (26177 14587 213491 835000) 0 nil])
([nil nil ((1170 . 1179) (#("min" 0 3 (fontified nil)) . -1170) (1170 . 1173) (#("min_point" 0 9 (fontified nil)) . -1170) (1170 . 1179) (#("min_po" 0 6 (fontified t)) . -1170) (undo-tree-id624 . -6) 1176) nil (26177 14587 213491 173000) 0 nil])
([nil nil ((1179 . 1180)) nil (26177 14587 213490 270000) 0 nil])
([nil nil ((1180 . 1193)) nil (26177 14587 213490 9000) 0 nil])
([nil nil ((1193 . 1214)) nil (26177 14587 213489 607000) 0 nil])
([nil nil ((1214 . 1225)) nil (26177 14587 213488 845000) 0 nil])
([nil nil ((1147 . 1152)) nil (26177 14587 213488 684000) 0 nil])
([nil nil ((1220 . 1226)) nil (26177 14587 213488 404000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1222) (undo-tree-id620 . -1) (#("l" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1223) (undo-tree-id621 . -1) (#("f" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1224) (undo-tree-id622 . -1) (#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1225) (undo-tree-id623 . -1) 1226) nil (26177 14587 213487 400000) 0 nil])
([nil nil ((1222 . 1225)) nil (26177 14587 213475 150000) 0 nil])
([nil nil ((#("            min_point=(x1, y1)
            max_point=(x2, y2)
            min_point_disp_coords=self.ax.transAxes.transform(min_point)
            max_point_disp_coords=self.ax.transAx" 0 12 (fontified t) 12 21 (face py-variable-name-face fontified t) 21 22 (face font-lock-operator-face fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 31 (fontified t) 31 43 (fontified t) 43 52 (face py-variable-name-face fontified t) 52 53 (face font-lock-operator-face fontified t) 53 54 (face (rainbow-delimiters-depth-1-face) fontified t) 54 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 61 62 (fontified t) 62 74 (fontified t) 74 95 (face py-variable-name-face fontified t) 95 96 (face font-lock-operator-face fontified t) 96 100 (face py-object-reference-face fontified t) 100 101 (fontified t) 101 123 (fontified t) 123 124 (face (rainbow-delimiters-depth-1-face) fontified t) 124 133 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 133 134 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 134 135 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 135 147 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 147 168 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 168 169 (face font-lock-operator-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 169 173 (face py-object-reference-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 173 174 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 174 184 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 1051) (undo-tree-id711 . -184) (undo-tree-id712 . -184) (t 26177 14587 217406 661000)) nil (26177 14877 185967 457000) 0 nil])
([nil nil ((1051 . 1063)) nil (26177 14877 185966 595000) 0 nil])
([nil nil ((1063 . 1083)) nil (26177 14877 185966 354000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1080) (undo-tree-id708 . -1) (#("x" 0 1 (fontified t)) . -1081) (undo-tree-id709 . -1) (#("t" 0 1 (fontified t)) . -1082) (undo-tree-id710 . -1) 1083) nil (26177 14877 185965 913000) 0 nil])
([nil nil ((1080 . 1085)) nil (26177 14877 185964 871000) 0 nil])
([nil nil ((1080 . 1088) (#("se" 0 2 (fontified nil)) . -1080) (1080 . 1082) (#("selector" 0 8 (fontified nil)) . -1080) (1080 . 1088) (#("selec" 0 5 (fontified t)) . -1080) (undo-tree-id699 . -5) (undo-tree-id700 . -5) (undo-tree-id701 . -5) (undo-tree-id702 . -5) (undo-tree-id703 . -5) (undo-tree-id704 . -5) (undo-tree-id705 . -5) (undo-tree-id706 . -5) (undo-tree-id707 . -5) 1085) nil (26177 14877 185964 69000) 0 nil])
([nil nil ((1088 . 1091)) nil (26177 14877 185960 912000) 0 nil])
([nil current ((1089 . 1096) (#("ex" 0 2 (fontified nil)) . -1089) (1089 . 1091) (#("extents" 0 7 (fontified nil)) . -1089) (1089 . 1096) (#("ex" 0 2 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1089) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -2) (undo-tree-id666 . -2) (undo-tree-id667 . -2) (undo-tree-id668 . -2) (undo-tree-id669 . -2) (undo-tree-id670 . -2) (undo-tree-id671 . -2) (undo-tree-id672 . -2) (undo-tree-id673 . -2) (undo-tree-id674 . -2) (undo-tree-id675 . -2) (undo-tree-id676 . -2) (undo-tree-id677 . -2) (undo-tree-id678 . -2) (undo-tree-id679 . -2) (undo-tree-id680 . -2) (undo-tree-id681 . -2) (undo-tree-id682 . -2) (undo-tree-id683 . -2) (undo-tree-id684 . -2) (undo-tree-id685 . -2) (undo-tree-id686 . -2) (undo-tree-id687 . -2) (undo-tree-id688 . -2) (undo-tree-id689 . -2) (undo-tree-id690 . -2) (undo-tree-id691 . -2) (undo-tree-id692 . -2) (undo-tree-id693 . -2) (undo-tree-id694 . -2) (undo-tree-id695 . -2) (undo-tree-id696 . -2) (undo-tree-id697 . -2) (undo-tree-id698 . -2) 1091) nil (26177 14877 185956 884000) 0 nil])
nil
